<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kevin.user.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.kevin.user.model.UserDTO">
		<id column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="pass_word" jdbcType="VARCHAR" property="passWord" />
		<result column="age" jdbcType="INTEGER" property="age" />
		<result column="sex" jdbcType="CHAR" property="sex" />
		<result column="birthday" jdbcType="DATE" property="birthday" />
	</resultMap>
	
	<sql id="Base_Column_List">
		user_id, user_name, pass_word, age, sex, birthday, created_date, updated_date
	</sql>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_user
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	
	<select id="userLogin" parameterType="com.kevin.user.model.UserDTO" resultType="com.kevin.user.model.UserDTO">
		select <include refid="Base_Column_List"/>
		from tb_user
		where user_name = #{userName}
		and pass_word = #{passWord} 
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from tb_user
		where user_id = #{userId,jdbcType=INTEGER}
	</delete>
	
	<insert id="insert" parameterType="com.kevin.user.model.UserDTO">
		insert into tb_user (user_name, pass_word,
		age, sex, birthday, created_date,
		updated_date)
		values (#{userName,jdbcType=VARCHAR},
		#{passWord,jdbcType=VARCHAR},
		#{age,jdbcType=INTEGER}, #{sex,jdbcType=CHAR}, #{birthday,jdbcType=DATE},
		now(), now())
	</insert>
	
	<insert id="insertSelective" parameterType="com.kevin.user.model.UserDTO">
		insert into tb_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userName != null">
				user_name,
			</if>
			<if test="passWord != null">
				pass_word,
			</if>
			<if test="age != null">
				age,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			created_date
			,updated_date
		</trim>
		
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="passWord != null">
				#{passWord,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=CHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=DATE},
			</if>
			now(),now()
		</trim>
	</insert>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.kevin.user.model.UserDTO">
		update tb_user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="passWord != null">
				pass_word = #{passWord,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=CHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=DATE},
			</if>
		</set>
		updated_date = now()
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="com.kevin.user.model.UserDTO">
		update tb_user
		set user_name = #{userName,jdbcType=VARCHAR},
		pass_word = #{passWord,jdbcType=VARCHAR},
		age = #{age,jdbcType=INTEGER},
		sex = #{sex,jdbcType=CHAR},
		birthday = #{birthday,jdbcType=DATE},
		updated_date = now()
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	
</mapper>